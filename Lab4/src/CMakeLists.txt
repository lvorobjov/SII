cmake_minimum_required(VERSION 3.1)
set(CMAKE_INSTALL_PREFIX ${CMAKE_CURRENT_SOURCE_DIR})

project(lab4)
set(LIBRARY_NAME logic)

if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Release)
endif()

include_directories(../../lab2/src ../../../SP/KP/include)
option(UNICODE "Use UTF-16 strings" ON)
if (UNICODE)
    add_definitions(-D_UNICODE -DUNICODE)
endif()
option(VERBODE "Print details to text file" ON)
if (VERBOSE)
    add_definitions(-DVERBOSE)
endif()
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED on)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -masm=intel")
set(CMAKE_CXX_FLAGS_DEBUG "-g")
set(CMAKE_CXX_FLAGS_RELEASE "-O -msse3")
set(CMAKE_EXE_LINKER_FLAGS "-mwindows")
set(CMAKE_EXE_LINKER_FLAGS_RELEASE  "-s -Wl,--gc-sections")
if ("${CMAKE_BUILD_TYPE}" STREQUAL "Debug")
    add_definitions(-DTEST_MODULE)
endif()
if(MINGW)
    set(CMAKE_RC_COMPILER_INIT windres)
    ENABLE_LANGUAGE(RC)
    SET(CMAKE_RC_COMPILE_OBJECT
            "<CMAKE_RC_COMPILER> <FLAGS> -O coff <DEFINES> -i <SOURCE> -o <OBJECT>")
endif(MINGW)
file(GLOB SRCS "*.cpp")
add_executable(${PROJECT_NAME} ${SRCS} ${PROJECT_NAME}.rc)
add_library(${LIBRARY_NAME} STATIC attribute.cpp logic.cpp utils.cpp parser.cpp)
target_link_libraries(${PROJECT_NAME} comctl32)
install(TARGETS ${PROJECT_NAME} RUNTIME DESTINATION .)
install(TARGETS ${LIBRARY_NAME} ARCHIVE DESTINATION .)
